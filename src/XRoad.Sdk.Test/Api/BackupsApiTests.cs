/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using XRoad.Sdk.Api;
using Xunit;

// uncomment below to import models
//using XRoad.Sdk.Model;

namespace XRoad.Sdk.Test.Api;

/// <summary>
///  Class for testing BackupsApi
/// </summary>
/// <remarks>
/// Please update the test case below to test the API endpoint.
/// </remarks>
public class BackupsApiTests : IDisposable
{
    private BackupsApi _instance = new();

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    /// Test an instance of BackupsApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' BackupsApi
        //Assert.IsType<BackupsApi>(instance);
    }

    /// <summary>
    /// Test AddBackup
    /// </summary>
    [Fact]
    public void AddBackupTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.AddBackup();
        //Assert.IsType<Backup>(response);
    }

    /// <summary>
    /// Test AddBackupExt
    /// </summary>
    [Fact]
    public void AddBackupExtTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.AddBackupExt();
        //Assert.IsType<BackupExt>(response);
    }

    /// <summary>
    /// Test DeleteBackup
    /// </summary>
    [Fact]
    public void DeleteBackupTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string filename = null;
        //instance.DeleteBackup(filename);
    }

    /// <summary>
    /// Test DownloadBackup
    /// </summary>
    [Fact]
    public void DownloadBackupTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string filename = null;
        //var response = instance.DownloadBackup(filename);
        //Assert.IsType<System.IO.Stream>(response);
    }

    /// <summary>
    /// Test GetBackups
    /// </summary>
    [Fact]
    public void GetBackupsTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.GetBackups();
        //Assert.IsType<List<Backup>>(response);
    }

    /// <summary>
    /// Test RestoreBackup
    /// </summary>
    [Fact]
    public void RestoreBackupTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string filename = null;
        //var response = instance.RestoreBackup(filename);
        //Assert.IsType<TokensLoggedOut>(response);
    }

    /// <summary>
    /// Test UploadBackup
    /// </summary>
    [Fact]
    public void UploadBackupTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //bool? ignoreWarnings = null;
        //System.IO.Stream file = null;
        //var response = instance.UploadBackup(ignoreWarnings, file);
        //Assert.IsType<Backup>(response);
    }
}