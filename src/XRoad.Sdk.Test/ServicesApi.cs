/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using XRoad.Sdk;
using Xunit;

// uncomment below to import models
//using XRoad.Sdk.Model;

namespace XRoad.Sdk.Test;

/// <summary>
///  Class for testing ServicesApi
/// </summary>
/// <remarks>
/// Please update the test case below to test the API endpoint.
/// </remarks>
public class ServicesApiTests : IDisposable
{
    private ServicesApi instance;

    public ServicesApiTests()
    {
        instance = new ServicesApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    /// Test an instance of ServicesApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        Assert.IsType<XRoadClient>(instance);
    }


    /// <summary>
    /// Test GetService
    /// </summary>
    [Fact]
    public void GetServiceTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string id = null;
        //var response = instance.GetService(id);
        //Assert.IsType<Service>(response);
    }

    /// <summary>
    /// Test GetServiceServiceClients
    /// </summary>
    [Fact]
    public void GetServiceServiceClientsTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string id = null;
        //var response = instance.GetServiceServiceClients(id);
        //Assert.IsType<List<ServiceClient>>(response);
    }

    /// <summary>
    /// Test UpdateService
    /// </summary>
    [Fact]
    public void UpdateServiceTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string id = null;
        //ServiceUpdate serviceUpdate = null;
        //var response = instance.UpdateService(id, serviceUpdate);
        //Assert.IsType<Service>(response);
    }
}