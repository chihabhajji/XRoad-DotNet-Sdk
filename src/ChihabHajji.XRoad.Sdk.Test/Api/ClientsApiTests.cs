/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ChihabHajji.XRoad.Sdk.Client;
using ChihabHajji.XRoad.Sdk.Api;
// uncomment below to import models
//using ChihabHajji.XRoad.Sdk.Model;

namespace ChihabHajji.XRoad.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ClientsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClientsApiTests : IDisposable
    {
        private ClientsApi instance;

        public ClientsApiTests()
        {
            instance = new ClientsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ClientsApi
            //Assert.IsType<ClientsApi>(instance);
        }

        /// <summary>
        /// Test AddClient
        /// </summary>
        [Fact]
        public void AddClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClientAdd clientAdd = null;
            //var response = instance.AddClient(clientAdd);
            //Assert.IsType<ModelClient>(response);
        }

        /// <summary>
        /// Test AddClientLocalGroup
        /// </summary>
        [Fact]
        public void AddClientLocalGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //LocalGroupAdd localGroupAdd = null;
            //var response = instance.AddClientLocalGroup(id, localGroupAdd);
            //Assert.IsType<LocalGroup>(response);
        }

        /// <summary>
        /// Test AddClientServiceDescription
        /// </summary>
        [Fact]
        public void AddClientServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ServiceDescriptionAdd serviceDescriptionAdd = null;
            //var response = instance.AddClientServiceDescription(id, serviceDescriptionAdd);
            //Assert.IsType<ServiceDescription>(response);
        }

        /// <summary>
        /// Test AddClientTlsCertificate
        /// </summary>
        [Fact]
        public void AddClientTlsCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //System.IO.Stream body = null;
            //var response = instance.AddClientTlsCertificate(id, body);
            //Assert.IsType<CertificateDetails>(response);
        }

        /// <summary>
        /// Test AddServiceClientAccessRights
        /// </summary>
        [Fact]
        public void AddServiceClientAccessRightsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string scId = null;
            //AccessRights accessRights = null;
            //var response = instance.AddServiceClientAccessRights(id, scId, accessRights);
            //Assert.IsType<List<AccessRight>>(response);
        }

        /// <summary>
        /// Test ChangeOwner
        /// </summary>
        [Fact]
        public void ChangeOwnerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.ChangeOwner(id);
        }

        /// <summary>
        /// Test DeleteClient
        /// </summary>
        [Fact]
        public void DeleteClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteClient(id);
        }

        /// <summary>
        /// Test DeleteClientTlsCertificate
        /// </summary>
        [Fact]
        public void DeleteClientTlsCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string hash = null;
            //instance.DeleteClientTlsCertificate(id, hash);
        }

        /// <summary>
        /// Test DeleteOrphans
        /// </summary>
        [Fact]
        public void DeleteOrphansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteOrphans(id);
        }

        /// <summary>
        /// Test DeleteServiceClientAccessRights
        /// </summary>
        [Fact]
        public void DeleteServiceClientAccessRightsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string scId = null;
            //AccessRights accessRights = null;
            //instance.DeleteServiceClientAccessRights(id, scId, accessRights);
        }

        /// <summary>
        /// Test FindClients
        /// </summary>
        [Fact]
        public void FindClientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string instance = null;
            //string memberClass = null;
            //string memberCode = null;
            //string subsystemCode = null;
            //bool? showMembers = null;
            //bool? internalSearch = null;
            //bool? localValidSignCert = null;
            //bool? excludeLocal = null;
            //var response = instance.FindClients(name, instance, memberClass, memberCode, subsystemCode, showMembers, internalSearch, localValidSignCert, excludeLocal);
            //Assert.IsType<List<ModelClient>>(response);
        }

        /// <summary>
        /// Test FindServiceClientCandidates
        /// </summary>
        [Fact]
        public void FindServiceClientCandidatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string memberNameGroupDescription = null;
            //ServiceClientType? serviceClientType = null;
            //string instance = null;
            //string memberClass = null;
            //string memberGroupCode = null;
            //string subsystemCode = null;
            //var response = instance.FindServiceClientCandidates(id, memberNameGroupDescription, serviceClientType, instance, memberClass, memberGroupCode, subsystemCode);
            //Assert.IsType<List<ServiceClient>>(response);
        }

        /// <summary>
        /// Test GetClient
        /// </summary>
        [Fact]
        public void GetClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClient(id);
            //Assert.IsType<ModelClient>(response);
        }

        /// <summary>
        /// Test GetClientLocalGroups
        /// </summary>
        [Fact]
        public void GetClientLocalGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientLocalGroups(id);
            //Assert.IsType<List<LocalGroup>>(response);
        }

        /// <summary>
        /// Test GetClientOrphans
        /// </summary>
        [Fact]
        public void GetClientOrphansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientOrphans(id);
            //Assert.IsType<OrphanInformation>(response);
        }

        /// <summary>
        /// Test GetClientServiceClients
        /// </summary>
        [Fact]
        public void GetClientServiceClientsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientServiceClients(id);
            //Assert.IsType<List<ServiceClient>>(response);
        }

        /// <summary>
        /// Test GetClientServiceDescriptions
        /// </summary>
        [Fact]
        public void GetClientServiceDescriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientServiceDescriptions(id);
            //Assert.IsType<List<ServiceDescription>>(response);
        }

        /// <summary>
        /// Test GetClientSignCertificates
        /// </summary>
        [Fact]
        public void GetClientSignCertificatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientSignCertificates(id);
            //Assert.IsType<List<TokenCertificate>>(response);
        }

        /// <summary>
        /// Test GetClientTlsCertificate
        /// </summary>
        [Fact]
        public void GetClientTlsCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string hash = null;
            //var response = instance.GetClientTlsCertificate(id, hash);
            //Assert.IsType<CertificateDetails>(response);
        }

        /// <summary>
        /// Test GetClientTlsCertificates
        /// </summary>
        [Fact]
        public void GetClientTlsCertificatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetClientTlsCertificates(id);
            //Assert.IsType<List<CertificateDetails>>(response);
        }

        /// <summary>
        /// Test GetServiceClient
        /// </summary>
        [Fact]
        public void GetServiceClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string scId = null;
            //var response = instance.GetServiceClient(id, scId);
            //Assert.IsType<ServiceClient>(response);
        }

        /// <summary>
        /// Test GetServiceClientAccessRights
        /// </summary>
        [Fact]
        public void GetServiceClientAccessRightsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string scId = null;
            //var response = instance.GetServiceClientAccessRights(id, scId);
            //Assert.IsType<List<AccessRight>>(response);
        }

        /// <summary>
        /// Test RegisterClient
        /// </summary>
        [Fact]
        public void RegisterClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.RegisterClient(id);
        }

        /// <summary>
        /// Test UnregisterClient
        /// </summary>
        [Fact]
        public void UnregisterClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.UnregisterClient(id);
        }

        /// <summary>
        /// Test UpdateClient
        /// </summary>
        [Fact]
        public void UpdateClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ConnectionTypeWrapper connectionTypeWrapper = null;
            //var response = instance.UpdateClient(id, connectionTypeWrapper);
            //Assert.IsType<ModelClient>(response);
        }
    }
}
