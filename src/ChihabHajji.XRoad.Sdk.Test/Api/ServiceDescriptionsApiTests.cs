/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ChihabHajji.XRoad.Sdk.Client;
using ChihabHajji.XRoad.Sdk.Api;
// uncomment below to import models
//using ChihabHajji.XRoad.Sdk.Model;

namespace ChihabHajji.XRoad.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ServiceDescriptionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ServiceDescriptionsApiTests : IDisposable
    {
        private ServiceDescriptionsApi instance;

        public ServiceDescriptionsApiTests()
        {
            instance = new ServiceDescriptionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ServiceDescriptionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ServiceDescriptionsApi
            //Assert.IsType<ServiceDescriptionsApi>(instance);
        }

        /// <summary>
        /// Test DeleteServiceDescription
        /// </summary>
        [Fact]
        public void DeleteServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteServiceDescription(id);
        }

        /// <summary>
        /// Test DisableServiceDescription
        /// </summary>
        [Fact]
        public void DisableServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ServiceDescriptionDisabledNotice serviceDescriptionDisabledNotice = null;
            //instance.DisableServiceDescription(id, serviceDescriptionDisabledNotice);
        }

        /// <summary>
        /// Test EnableServiceDescription
        /// </summary>
        [Fact]
        public void EnableServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.EnableServiceDescription(id);
        }

        /// <summary>
        /// Test GetServiceDescription
        /// </summary>
        [Fact]
        public void GetServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetServiceDescription(id);
            //Assert.IsType<ServiceDescription>(response);
        }

        /// <summary>
        /// Test GetServiceDescriptionServices
        /// </summary>
        [Fact]
        public void GetServiceDescriptionServicesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetServiceDescriptionServices(id);
            //Assert.IsType<List<Service>>(response);
        }

        /// <summary>
        /// Test RefreshServiceDescription
        /// </summary>
        [Fact]
        public void RefreshServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //IgnoreWarnings ignoreWarnings = null;
            //var response = instance.RefreshServiceDescription(id, ignoreWarnings);
            //Assert.IsType<ServiceDescription>(response);
        }

        /// <summary>
        /// Test UpdateServiceDescription
        /// </summary>
        [Fact]
        public void UpdateServiceDescriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ServiceDescriptionUpdate serviceDescriptionUpdate = null;
            //var response = instance.UpdateServiceDescription(id, serviceDescriptionUpdate);
            //Assert.IsType<ServiceDescription>(response);
        }
    }
}
