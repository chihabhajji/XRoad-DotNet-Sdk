/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace XRoad.Sdk.Model;

/// <summary>
/// service client. May be a subsystem, local group, or a global group
/// </summary>
[DataContract(Name = "ServiceClient")]
public class ServiceClient : IEquatable<ServiceClient>, IValidatableObject
{
    /// <summary>
    /// Gets or Sets ServiceClientType
    /// </summary>
    [DataMember(Name = "service_client_type", EmitDefaultValue = false)]
    public ServiceClientType? ServiceClientType { get; }

    /// <summary>
    /// Initializes a new instance of the <see cref="ServiceClient" /> class.
    /// </summary>
    [JsonConstructor]
    protected ServiceClient()
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ServiceClient" /> class.
    /// </summary>
    /// <param name="id">subject id - can be a subsystem id &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;:&lt;subsystem&gt; | globalgroup id &lt;instance_id&gt;:&lt;group_code&gt; | localgroup resource id in number format &lt;id&gt; (required).</param>
    /// <param name="serviceClientType">serviceClientType.</param>
    public ServiceClient(string id = default, ServiceClientType? serviceClientType = default)
    {
        // to ensure "id" is required (not null)
        if (id == null)
            throw new ArgumentNullException(nameof(id),
                "id is a required property for ServiceClient and cannot be null");
        Id = id;
        ServiceClientType = serviceClientType;
    }

    /// <summary>
    /// subject id - can be a subsystem id &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;:&lt;subsystem&gt; | globalgroup id &lt;instance_id&gt;:&lt;group_code&gt; | localgroup resource id in number format &lt;id&gt;
    /// </summary>
    /// <value>subject id - can be a subsystem id &lt;instance_id&gt;:&lt;member_class&gt;:&lt;member_code&gt;:&lt;subsystem&gt; | globalgroup id &lt;instance_id&gt;:&lt;group_code&gt; | localgroup resource id in number format &lt;id&gt;</value>
    [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
    public string Id { get; }

    /// <summary>
    /// name of the ServiceClient - can be the name of a member or the description of a group
    /// </summary>
    /// <value>name of the ServiceClient - can be the name of a member or the description of a group</value>
    [DataMember(Name = "name", EmitDefaultValue = false)]
    public string Name { get; }

    /// <summary>
    /// Returns false as Name should not be serialized given that it's read-only.
    /// </summary>
    /// <returns>false (boolean)</returns>
    public static bool ShouldSerializeName()
    {
        return false;
    }

    /// <summary>
    /// group code in case the object is a local group
    /// </summary>
    /// <value>group code in case the object is a local group</value>
    [DataMember(Name = "local_group_code", EmitDefaultValue = false)]
    public string LocalGroupCode { get; }

    /// <summary>
    /// Returns false as LocalGroupCode should not be serialized given that it's read-only.
    /// </summary>
    /// <returns>false (boolean)</returns>
    public bool ShouldSerializeLocalGroupCode()
    {
        return false;
    }

    /// <summary>
    /// time when access right were given at. When listing client&#39;s service clients without specifying the service, the time when first service access right was given to this service client for any service. When listing service clients for a specific service, time when service client was added permission to that service.
    /// </summary>
    /// <value>time when access right were given at. When listing client&#39;s service clients without specifying the service, the time when first service access right was given to this service client for any service. When listing service clients for a specific service, time when service client was added permission to that service.</value>
    [DataMember(Name = "rights_given_at", EmitDefaultValue = false)]
    public DateTime RightsGivenAt { get; }

    /// <summary>
    /// Returns false as RightsGivenAt should not be serialized given that it's read-only.
    /// </summary>
    /// <returns>false (boolean)</returns>
    public bool ShouldSerializeRightsGivenAt()
    {
        return false;
    }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ServiceClient {\n");
        sb.Append("  Id: ").Append(Id).Append('\n');
        sb.Append("  Name: ").Append(Name).Append('\n');
        sb.Append("  LocalGroupCode: ").Append(LocalGroupCode).Append('\n');
        sb.Append("  ServiceClientType: ").Append(ServiceClientType).Append('\n');
        sb.Append("  RightsGivenAt: ").Append(RightsGivenAt).Append('\n');
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
        return Equals(input as ServiceClient);
    }

    /// <summary>
    /// Returns true if ServiceClient instances are equal
    /// </summary>
    /// <param name="input">Instance of ServiceClient to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(ServiceClient input)
    {
        if (input == null) return false;
        return
            (
                Id == input.Id ||
                (Id != null &&
                 Id.Equals(input.Id))
            ) &&
            (
                Name == input.Name ||
                (Name != null &&
                 Name.Equals(input.Name))
            ) &&
            (
                LocalGroupCode == input.LocalGroupCode ||
                (LocalGroupCode != null &&
                 LocalGroupCode.Equals(input.LocalGroupCode))
            ) &&
            (
                ServiceClientType == input.ServiceClientType ||
                ServiceClientType.Equals(input.ServiceClientType)
            ) &&
            (
                RightsGivenAt == input.RightsGivenAt ||
                RightsGivenAt.Equals(input.RightsGivenAt)
            );
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            if (Id != null) hashCode = hashCode * 59 + Id.GetHashCode();
            if (Name != null) hashCode = hashCode * 59 + Name.GetHashCode();
            if (LocalGroupCode != null) hashCode = hashCode * 59 + LocalGroupCode.GetHashCode();
            hashCode = hashCode * 59 + ServiceClientType.GetHashCode();
            hashCode = hashCode * 59 + RightsGivenAt.GetHashCode();
            return hashCode;
        }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        // Id (string) maxLength
        if (Id is {Length: > 1279})
            yield return new ValidationResult("Invalid value for Id, length must be less than 1279.", new[] {"Id"});

        // Id (string) minLength
        if (Id is {Length: < 1})
            yield return new ValidationResult("Invalid value for Id, length must be greater than 1.", new[] {"Id"});

        // Name (string) maxLength
        if (Name is {Length: > 255})
            yield return new ValidationResult("Invalid value for Name, length must be less than 255.", new[] {"Name"});

        // Name (string) minLength
        if (Name is {Length: < 1})
            yield return new ValidationResult("Invalid value for Name, length must be greater than 1.", new[] {"Name"});

        // LocalGroupCode (string) maxLength
        if (LocalGroupCode is {Length: > 255})
            yield return new ValidationResult("Invalid value for LocalGroupCode, length must be less than 255.",
                new[] {"LocalGroupCode"});

        // LocalGroupCode (string) minLength
        if (LocalGroupCode is {Length: < 1})
            yield return new ValidationResult("Invalid value for LocalGroupCode, length must be greater than 1.",
                new[] {"LocalGroupCode"});
    }
}