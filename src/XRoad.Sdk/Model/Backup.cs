/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace XRoad.Sdk.Model;

/// <summary>
/// security server backup
/// </summary>
[DataContract(Name = "Backup")]
public class Backup : IEquatable<Backup>, IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="Backup" /> class.
    /// </summary>
    [JsonConstructor]
    protected Backup()
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="Backup" /> class.
    /// </summary>
    /// <param name="filename">backup filename (required).</param>
    /// <param name="createdAt">backup created at (required).</param>
    public Backup(string filename = default, DateTime createdAt = default)
    {
        // to ensure "filename" is required (not null)
        Filename = filename ?? throw new ArgumentNullException(nameof(filename),"filename is a required property for Backup and cannot be null");
        CreatedAt = createdAt;
    }

    /// <summary>
    /// backup filename
    /// </summary>
    /// <value>backup filename</value>
    [DataMember(Name = "filename", IsRequired = true, EmitDefaultValue = false)]
    public string Filename { get; }

    /// <summary>
    /// backup created at
    /// </summary>
    /// <value>backup created at</value>
    [DataMember(Name = "created_at", IsRequired = true, EmitDefaultValue = false)]
    public DateTime CreatedAt { get; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class Backup {\n");
        sb.Append("  Filename: ").Append(Filename).Append('\n');
        sb.Append("  CreatedAt: ").Append(CreatedAt).Append('\n');
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
        return Equals(input as Backup);
    }

    /// <summary>
    /// Returns true if Backup instances are equal
    /// </summary>
    /// <param name="input">Instance of Backup to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(Backup input)
    {
        if (input == null) return false;
        return
            (
                Filename == input.Filename ||
                (Filename != null &&
                 Filename.Equals(input.Filename))
            ) &&
            (
                CreatedAt == input.CreatedAt ||
                (CreatedAt.Equals(input.CreatedAt))
            );
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            if (Filename != null) hashCode = hashCode * 59 + Filename.GetHashCode();
            hashCode = hashCode * 59 + CreatedAt.GetHashCode();
            return hashCode;
        }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        // Filename (string) maxLength
        if (Filename is {Length: > 255})
            yield return new ValidationResult("Invalid value for Filename, length must be less than 255.",
                new[] {"Filename"});

        // Filename (string) minLength
        if (Filename is {Length: < 1})
            yield return new ValidationResult("Invalid value for Filename, length must be greater than 1.",
                new[] {"Filename"});
        // TODO
        // // CreatedAt (DateTime) maxLength
        // if (CreatedAt != null && CreatedAt.Length > 24)
        // {
        //     yield return new ValidationResult("Invalid value for CreatedAt, length must be less than 24.", new [] { "CreatedAt" });
        // }
        //
        // // CreatedAt (DateTime) minLength
        // if (CreatedAt != null && CreatedAt.Length < 24)
        // {
        //     yield return new ValidationResult("Invalid value for CreatedAt, length must be greater than 24.", new [] { "CreatedAt" });
        // }
    }
}