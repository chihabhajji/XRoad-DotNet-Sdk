/*
 * X-Road Security Server Admin API
 *
 * X-Road Security Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@niis.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace XRoad.Sdk.Model;

/// <summary>
/// member&#39;s name
/// </summary>
[DataContract(Name = "MemberName")]
public class MemberName : IEquatable<MemberName>, IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="MemberName" /> class.
    /// </summary>
    /// <param name="memberName">memberName.</param>
    public MemberName(string memberName = default)
    {
        _MemberName = memberName;
    }

    /// <summary>
    /// Gets or Sets _MemberName
    /// </summary>
    [DataMember(Name = "member_name", EmitDefaultValue = false)]
    public string _MemberName { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class MemberName {\n");
        sb.Append("  _MemberName: ").Append(_MemberName).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input)
    {
        return Equals(input as MemberName);
    }

    /// <summary>
    /// Returns true if MemberName instances are equal
    /// </summary>
    /// <param name="input">Instance of MemberName to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(MemberName input)
    {
        if (input == null) return false;
        return
            _MemberName == input._MemberName ||
            (_MemberName != null &&
             _MemberName.Equals(input._MemberName));
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            if (_MemberName != null) hashCode = hashCode * 59 + _MemberName.GetHashCode();
            return hashCode;
        }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
    {
        yield break;
    }
}